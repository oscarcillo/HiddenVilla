@page "/blazorjs"
@inject IJSRuntime JsRuntime

<h3>BlazorJs</h3>

<div>
    <button class="btn btn-secondary" @onclick="() => TestConfirmBox(ConfirmMessage)">Test Confirm Button</button>
</div>

<div class="mt-2">
    <button class="btn btn-success" @onclick="TestSuccess">Test Toastr Success</button>
    <button class="btn btn-danger" @onclick="TestFailure">Test Toastr Failure</button>
</div>

<div class="mt-2">
    <button class="btn btn-success" @onclick="TestSuccessSwal">Test Swal Success</button>
    <button class="btn btn-danger" @onclick="TestFailureSwal">Test Swal Failure</button>
</div>

@if (ConfirmResult)
{
    <p>Confirmation has been made</p>
}
else
{
    <p>Confirmation Pending</p>
}

@code {
    private string ConfirmMessage { get; set; } = "Are you sure you want to click?";
    
    private bool ConfirmResult { get; set; }
    
    private async Task TestConfirmBox(string message) 
        => ConfirmResult = await JsRuntime.InvokeAsync<bool>("confirm", message);
    
    private async Task TestSuccess() => await JsRuntime.ToastrSuccess("Success Message");
    private async Task TestFailure() => await JsRuntime.ToastrFailure("Failure Message");
    
    private async Task TestSuccessSwal() => await JsRuntime.SwalSuccess("Success Swal Message");
    private async Task TestFailureSwal() => await JsRuntime.SwalFailure("Error Swal Message");
}
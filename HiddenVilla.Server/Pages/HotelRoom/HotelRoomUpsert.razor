@page "/hotel-room/create"
@page "/hotel-room/edit/{Id:int}"
@using Domain
@using Application.Repository.IRepository
@inject IRepository<HotelRoomDto> _hotelRoomRepository
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

<div class="row t-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandleHotelRoomUpsert">
                    <DataAnnotationsValidator/>
                    @*<ValidationSummary/>*@
                    <div class="form-group">
                        <label>Name</label>
                        <InputText @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Occupancy</label>
                        <InputNumber @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Rate</label>
                        <InputNumber @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.RegularRate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Sq ft.</label>
                        <InputText @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.SqFt"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label>Details</label>
                        <InputTextArea @bind-Value="HotelRoomModel.Details" class="form-control"></InputTextArea>
                        <ValidationMessage For="() => HotelRoomModel.Details"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="/hotel-room" class="btn btn-secondary">Return</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    
    private HotelRoomDto HotelRoomModel { get; set; } = new ();
    private string Title { get; set; } = "Create";
    
    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id != null)
        {
            Title = "Update";
            HotelRoomModel = await _hotelRoomRepository.Get(Id.Value);
        }
        else HotelRoomModel = new HotelRoomDto();
    }

    private async Task HandleHotelRoomUpsert()
    {
        try
        {
            if (await _hotelRoomRepository.IsUnique(HotelRoomModel.Name, HotelRoomModel.Id) != null)
            {
                await _jsRuntime.ToastrFailure("Room name already exists");
                return;
            }
            
            if (HotelRoomModel.Id != 0)
                await _hotelRoomRepository.Update(HotelRoomModel.Id, HotelRoomModel);
            else
                await _hotelRoomRepository.Create(HotelRoomModel);

            await _jsRuntime.ToastrSuccess($"Hotel Room {Title}d Successfully");

            _navigationManager.NavigateTo("hotel-room");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}